{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{getAllSpells}from\"../../hooks/api\";import Navbar from\"../Navbar/Navbar\";import SpellCard from\"../SpellCard/SpellCard\";import\"./Dashboard.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Dashboard(){/* Complete list of spells */const[spells,setSpells]=useState([]);/* Current spell to be displayed */const[spell,setSpell]=useState(\"\");/* Current spell class, used for filtering */const[spellClass,setSpellClass]=useState(\"All\");/* Complete level, used for filtering */const[level,setLevel]=useState(\"All\");/* Populate list of spells, filtering by search entry and level/class selections */const filteredList=spells.filter(element=>{if(spell==\"\"&(spellClass==\"All\"||element.classes.includes(spellClass))&(level==\"All\"||element.level==level)){return true;}if(element.name.toLowerCase().includes(spell)&(spellClass==\"All\"||element.classes.map(c=>c.name).includes(spellClass))&(level==\"All\"||element.level==level)){return true;}return false;});/* Function to convert JSON spell data to iterable list */useEffect(()=>{const savedSpells=localStorage.getItem(\"spells\");if(savedSpells)setSpells(JSON.parse(savedSpells));getAllSpells().then(spells=>{setSpells(spells);localStorage.setItem(\"spells\",JSON.stringify(spells));});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{spell:spell,onSpellChange:setSpell,spellClass:spellClass,setSpellClass:setSpellClass,level:level,setLevel:setLevel}),spells.length===0&&/*#__PURE__*/_jsx(\"span\",{className:\"loading\",children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"body spell-list\",children:filteredList.map(spell=>/*#__PURE__*/_jsx(SpellCard,{spell:spell},spell.index))})]});}","map":{"version":3,"names":["React","useEffect","useState","getAllSpells","Navbar","SpellCard","jsx","_jsx","jsxs","_jsxs","Dashboard","spells","setSpells","spell","setSpell","spellClass","setSpellClass","level","setLevel","filteredList","filter","element","classes","includes","name","toLowerCase","map","c","savedSpells","localStorage","getItem","JSON","parse","then","setItem","stringify","children","onSpellChange","length","className","index"],"sources":["/Users/Tom/Documents/Code/dnd-spell-search/src/Components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllSpells } from \"../../hooks/api\";\nimport Navbar from \"../Navbar/Navbar\";\nimport SpellCard from \"../SpellCard/SpellCard\";\nimport \"./Dashboard.css\";\n\nexport default function Dashboard() {\n  /* Complete list of spells */\n  const [spells, setSpells] = useState([]);\n\n  /* Current spell to be displayed */\n  const [spell, setSpell] = useState(\"\");\n\n  /* Current spell class, used for filtering */\n  const [spellClass, setSpellClass] = useState(\"All\");\n\n  /* Complete level, used for filtering */\n  const [level, setLevel] = useState(\"All\");\n\n  /* Populate list of spells, filtering by search entry and level/class selections */\n  const filteredList = spells.filter((element) => {\n    if (\n      (spell == \"\") &\n      (spellClass == \"All\" || element.classes.includes(spellClass)) &\n      (level == \"All\" || element.level == level)\n    ) {\n      return true;\n    }\n    if (\n      element.name.toLowerCase().includes(spell) &\n      (spellClass == \"All\" ||\n        element.classes.map((c) => c.name).includes(spellClass)) &\n      (level == \"All\" || element.level == level)\n    ) {\n      return true;\n    }\n    return false;\n  });\n\n  /* Function to convert JSON spell data to iterable list */\n  useEffect(() => {\n    const savedSpells = localStorage.getItem(\"spells\");\n    if (savedSpells) setSpells(JSON.parse(savedSpells));\n    getAllSpells().then((spells) => {\n      setSpells(spells);\n      localStorage.setItem(\"spells\", JSON.stringify(spells));\n    });\n  }, []);\n\n  return (\n    <div>\n      {/* Navbar component containing page title and filter inputs */}\n      <Navbar\n        spell={spell}\n        onSpellChange={setSpell}\n        spellClass={spellClass}\n        setSpellClass={setSpellClass}\n        level={level}\n        setLevel={setLevel}\n      />\n\n      {/* Loading placeholder */}\n      {spells.length === 0 && <span className=\"loading\">Loading...</span>}\n\n      {/* Render filtered list of spell cards */}\n      <div className=\"body spell-list\">\n        {filteredList.map((spell) => (\n          <SpellCard key={spell.index} spell={spell} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,YAAY,KAAQ,iBAAiB,CAC9C,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzB,cAAe,SAAS,CAAAC,SAASA,CAAA,CAAG,CAClC,6BACA,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAExC,mCACA,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtC,6CACA,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAEnD,wCACA,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAEzC,mFACA,KAAM,CAAAiB,YAAY,CAAGR,MAAM,CAACS,MAAM,CAAEC,OAAO,EAAK,CAC9C,GACGR,KAAK,EAAI,EAAE,EACXE,UAAU,EAAI,KAAK,EAAIM,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACR,UAAU,CAAC,CAAC,EAC5DE,KAAK,EAAI,KAAK,EAAII,OAAO,CAACJ,KAAK,EAAIA,KAAK,CAAC,CAC1C,CACA,MAAO,KAAI,CACb,CACA,GACEI,OAAO,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACF,QAAQ,CAACV,KAAK,CAAC,EACzCE,UAAU,EAAI,KAAK,EAClBM,OAAO,CAACC,OAAO,CAACI,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACH,IAAI,CAAC,CAACD,QAAQ,CAACR,UAAU,CAAC,CAAC,EACzDE,KAAK,EAAI,KAAK,EAAII,OAAO,CAACJ,KAAK,EAAIA,KAAK,CAAC,CAC1C,CACA,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAC,CAAC,CAEF,0DACAhB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2B,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAClD,GAAIF,WAAW,CAAEhB,SAAS,CAACmB,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CACnDzB,YAAY,CAAC,CAAC,CAAC8B,IAAI,CAAEtB,MAAM,EAAK,CAC9BC,SAAS,CAACD,MAAM,CAAC,CACjBkB,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAEH,IAAI,CAACI,SAAS,CAACxB,MAAM,CAAC,CAAC,CACxD,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEF,KAAA,QAAA2B,QAAA,eAEE7B,IAAA,CAACH,MAAM,EACLS,KAAK,CAAEA,KAAM,CACbwB,aAAa,CAAEvB,QAAS,CACxBC,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BC,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACpB,CAAC,CAGDP,MAAM,CAAC2B,MAAM,GAAK,CAAC,eAAI/B,IAAA,SAAMgC,SAAS,CAAC,SAAS,CAAAH,QAAA,CAAC,YAAU,CAAM,CAAC,cAGnE7B,IAAA,QAAKgC,SAAS,CAAC,iBAAiB,CAAAH,QAAA,CAC7BjB,YAAY,CAACO,GAAG,CAAEb,KAAK,eACtBN,IAAA,CAACF,SAAS,EAAmBQ,KAAK,CAAEA,KAAM,EAA1BA,KAAK,CAAC2B,KAAsB,CAC7C,CAAC,CACC,CAAC,EACH,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}